swagger: '2.0'
info:
  description: This is a sample API for users and tasks.
  version: 1.0.0
  title: User and Task API
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: tkarp87@Live.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: taskapi.toddysm.com
basePath: /v2
tags:
  - name: user
    description: Operations about users
  - name: task
    description: Operations about tasks
schemes:
  - http
paths:
  /users:
    post:
      tags:
        - users
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
        - application/json
      parameters:
        - in: body
          name: userFirstName
          description: Created user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:        
        '200':
          description: create user
          schema:
            type: array
            items:
              $ref: '#/definitions/User'       
        '400':
          description: Invalid data supplied
    get:
      tags:
        - users
      summary: Get list of users
      description: Returns a list of users
      operationId: getUser
      produces:
        - application/json
      responses:        
        '200':
          description: list of users
          schema:
            type: array
            items:
              $ref: '#/definitions/User'       
        '400':
          description: An error occured
  '/users/{userId}':
    get:
      tags:
        - users
      summary: Get user by user id
      description: Get user by id
      operationId: getUserById
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: 'The user id that needs to be fetched.'
          required: true
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid user id supplied
        '404':
          description: User not found
    put:
      tags:
        - user
      summary: Update user
      description: Update a user with given id
      operationId: updateUser
      produces:
        - application/json
      parameters:
        - name: user
          in: path
          description: user object to be updated
          required: true
          schema:
          $ref: '#/definitions/User'
        - in: path
          name: userId
          description: Updated user object for id
          required: true
          type: integer
          format: int64
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: User was successfully updated      
        '400':
          description: Invalid user object supplied
        '404':
          description: User not found
        '405':
          description: Validation error
    delete:
      tags:
        - user
      summary: Delete user
      description: delete user
      operationId: deleteUser
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          description: The id that needs to be deleted
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: User was deleted
        '400':
          description: Invalid userid supplied
        '404':
          description: User not found
  users/{userId}/tasks:
    post:
      tags:
        - task
      summary: Add a new task to the system
      description: ''
      operationId: addTask
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: task
          description: task object to be added
          required: true
          schema:
            $ref: '#/definitions/Task'      
        - in: path
          name: userId
          description: id of user to add task to.
          required: true
          type: integer
          format: int64
          schema:
            $ref: '#/definitions/users'
      responses:
        '200':
          description: Task was added to user      
        '405':
          description: Invalid input
  get:
      tags:
        - task
      summary: Get all tasks for user
      description: Get all tasks for user
      operationId: getTask
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: userId
          description: userId to get tasks for
          required: true
          type: integer
          format: int 64
      responses:
        '200':
          description: List of tasks
          schema:
            type:array
            items:
              $ref: '#/definitions/Task'
        '404':
          description: user not found
        '405':
          description: Invalid input      
  '/users/{userId}/task/{taskId}':
    get:
      tags:
        - task
      summary: Find task by ID
      description: Returns a single task
      operationId: getTaskById
      produces:
        - application/json
      parameters:
        - name: taskId
          in: path
          description: ID of task to return
          required: true
          type: integer
          format: int64
        - name: userId
          in: path
          description: ID of user
          required: true
          type: integer
          format: int64          
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Task'
        '404':
          description: Task not found
      security:
        - api_key: []
    put:
      tags:
        - task
      summary: Updates a task 
      description: ''
      operationId: updateTask
      consumes:
        - application/json
      parameters:
        - name: task
          in: body
          description: ID of task
          required: true
          schema:
            $ref: '#/definitions/Task'
        - name: taskId
          in: path
          description: ID of task
          required: true
          type: integer
          format: int64
        - name: userId
          in: path
          description: ID of user
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Task was updated
        '400':
          description: Task or user not found
        '405':
          description: Invalid input
    delete:
      tags:
        - task
      summary: Deletes a task
      description: ''
      operationId: deleteTask
      parameters:
        - name: userId
          in: path
          description: user id
          required: true
          type: integer
          format: int64
        - name: taskId
          in: path
          description: Task id to delete
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Task was deleted
        '404':
          description: Task not found
definitions:
  User:
    type: object
    properties:
      userId:
        type: integer
        format: int64
      firstName:
        type: string
      lastName:
        type: string
      tasks:
        type:array
        items:
          $ref: '#/definitions/Task'
  Task:
    type: object
    required:
      - name
    properties:
        properties:
      taskId:
        type: integer
        format: int64
      title:
        type: string
      creationDate:
        type: string
        format: date
      dueDate:
        type: string
        format: date
      completionDate:
        type: string
        format: date
      status:
        type: string
        description: task status
        enum:
          - new
          - in-progress
          - blocked
          - completed
      owner:
        type: integer
        format: int64
        description: the id for the user
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
